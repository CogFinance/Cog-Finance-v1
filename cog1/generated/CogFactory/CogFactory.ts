// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previous_owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get new_owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previous_owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get new_owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StablePairCreated extends ethereum.Event {
  get params(): StablePairCreated__Params {
    return new StablePairCreated__Params(this);
  }
}

export class StablePairCreated__Params {
  _event: StablePairCreated;

  constructor(event: StablePairCreated) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LowPairCreated extends ethereum.Event {
  get params(): LowPairCreated__Params {
    return new LowPairCreated__Params(this);
  }
}

export class LowPairCreated__Params {
  _event: LowPairCreated;

  constructor(event: LowPairCreated) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MediumPairCreated extends ethereum.Event {
  get params(): MediumPairCreated__Params {
    return new MediumPairCreated__Params(this);
  }
}

export class MediumPairCreated__Params {
  _event: MediumPairCreated;

  constructor(event: MediumPairCreated) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class HighPairCreated extends ethereum.Event {
  get params(): HighPairCreated__Params {
    return new HighPairCreated__Params(this);
  }
}

export class HighPairCreated__Params {
  _event: HighPairCreated;

  constructor(event: HighPairCreated) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CustomPairCreated extends ethereum.Event {
  get params(): CustomPairCreated__Params {
    return new CustomPairCreated__Params(this);
  }
}

export class CustomPairCreated__Params {
  _event: CustomPairCreated;

  constructor(event: CustomPairCreated) {
    this._event = event;
  }

  get blueprint(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateral(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class CogFactory extends ethereum.SmartContract {
  static bind(address: Address): CogFactory {
    return new CogFactory("CogFactory", address);
  }

  deploy_stable_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): Address {
    let result = super.call(
      "deploy_stable_risk_pair",
      "deploy_stable_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );

    return result[0].toAddress();
  }

  try_deploy_stable_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deploy_stable_risk_pair",
      "deploy_stable_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy_low_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): Address {
    let result = super.call(
      "deploy_low_risk_pair",
      "deploy_low_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );

    return result[0].toAddress();
  }

  try_deploy_low_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deploy_low_risk_pair",
      "deploy_low_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy_medium_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): Address {
    let result = super.call(
      "deploy_medium_risk_pair",
      "deploy_medium_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );

    return result[0].toAddress();
  }

  try_deploy_medium_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deploy_medium_risk_pair",
      "deploy_medium_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy_high_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): Address {
    let result = super.call(
      "deploy_high_risk_pair",
      "deploy_high_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );

    return result[0].toAddress();
  }

  try_deploy_high_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deploy_high_risk_pair",
      "deploy_high_risk_pair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy_custom_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address,
    _blueprint: Address,
    code_offset: BigInt,
    minimum_target_utilization: BigInt,
    maximum_target_utilization: BigInt,
    starting_interest_per_second: BigInt,
    minimum_interest_per_second: BigInt,
    maximum_interest_per_second: BigInt,
    elasticity: BigInt
  ): Address {
    let result = super.call(
      "deploy_custom_risk_pair",
      "deploy_custom_risk_pair(address,address,address,address,uint256,uint256,uint256,uint64,uint64,uint64,uint256):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle),
        ethereum.Value.fromAddress(_blueprint),
        ethereum.Value.fromUnsignedBigInt(code_offset),
        ethereum.Value.fromUnsignedBigInt(minimum_target_utilization),
        ethereum.Value.fromUnsignedBigInt(maximum_target_utilization),
        ethereum.Value.fromUnsignedBigInt(starting_interest_per_second),
        ethereum.Value.fromUnsignedBigInt(minimum_interest_per_second),
        ethereum.Value.fromUnsignedBigInt(maximum_interest_per_second),
        ethereum.Value.fromUnsignedBigInt(elasticity)
      ]
    );

    return result[0].toAddress();
  }

  try_deploy_custom_risk_pair(
    asset: Address,
    collateral: Address,
    oracle: Address,
    _blueprint: Address,
    code_offset: BigInt,
    minimum_target_utilization: BigInt,
    maximum_target_utilization: BigInt,
    starting_interest_per_second: BigInt,
    minimum_interest_per_second: BigInt,
    maximum_interest_per_second: BigInt,
    elasticity: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deploy_custom_risk_pair",
      "deploy_custom_risk_pair(address,address,address,address,uint256,uint256,uint256,uint64,uint64,uint64,uint256):(address)",
      [
        ethereum.Value.fromAddress(asset),
        ethereum.Value.fromAddress(collateral),
        ethereum.Value.fromAddress(oracle),
        ethereum.Value.fromAddress(_blueprint),
        ethereum.Value.fromUnsignedBigInt(code_offset),
        ethereum.Value.fromUnsignedBigInt(minimum_target_utilization),
        ethereum.Value.fromUnsignedBigInt(maximum_target_utilization),
        ethereum.Value.fromUnsignedBigInt(starting_interest_per_second),
        ethereum.Value.fromUnsignedBigInt(minimum_interest_per_second),
        ethereum.Value.fromUnsignedBigInt(maximum_interest_per_second),
        ethereum.Value.fromUnsignedBigInt(elasticity)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pending_owner(): Address {
    let result = super.call("pending_owner", "pending_owner():(address)", []);

    return result[0].toAddress();
  }

  try_pending_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pending_owner",
      "pending_owner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  priv_users(arg0: Address): boolean {
    let result = super.call("priv_users", "priv_users(address):(bool)", [
      ethereum.Value.fromAddress(arg0)
    ]);

    return result[0].toBoolean();
  }

  try_priv_users(arg0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("priv_users", "priv_users(address):(bool)", [
      ethereum.Value.fromAddress(arg0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fee_to(): Address {
    let result = super.call("fee_to", "fee_to():(address)", []);

    return result[0].toAddress();
  }

  try_fee_to(): ethereum.CallResult<Address> {
    let result = super.tryCall("fee_to", "fee_to():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class Transfer_ownershipCall extends ethereum.Call {
  get inputs(): Transfer_ownershipCall__Inputs {
    return new Transfer_ownershipCall__Inputs(this);
  }

  get outputs(): Transfer_ownershipCall__Outputs {
    return new Transfer_ownershipCall__Outputs(this);
  }
}

export class Transfer_ownershipCall__Inputs {
  _call: Transfer_ownershipCall;

  constructor(call: Transfer_ownershipCall) {
    this._call = call;
  }

  get new_owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Transfer_ownershipCall__Outputs {
  _call: Transfer_ownershipCall;

  constructor(call: Transfer_ownershipCall) {
    this._call = call;
  }
}

export class Accept_ownershipCall extends ethereum.Call {
  get inputs(): Accept_ownershipCall__Inputs {
    return new Accept_ownershipCall__Inputs(this);
  }

  get outputs(): Accept_ownershipCall__Outputs {
    return new Accept_ownershipCall__Outputs(this);
  }
}

export class Accept_ownershipCall__Inputs {
  _call: Accept_ownershipCall;

  constructor(call: Accept_ownershipCall) {
    this._call = call;
  }
}

export class Accept_ownershipCall__Outputs {
  _call: Accept_ownershipCall;

  constructor(call: Accept_ownershipCall) {
    this._call = call;
  }
}

export class Renounce_ownershipCall extends ethereum.Call {
  get inputs(): Renounce_ownershipCall__Inputs {
    return new Renounce_ownershipCall__Inputs(this);
  }

  get outputs(): Renounce_ownershipCall__Outputs {
    return new Renounce_ownershipCall__Outputs(this);
  }
}

export class Renounce_ownershipCall__Inputs {
  _call: Renounce_ownershipCall;

  constructor(call: Renounce_ownershipCall) {
    this._call = call;
  }
}

export class Renounce_ownershipCall__Outputs {
  _call: Renounce_ownershipCall;

  constructor(call: Renounce_ownershipCall) {
    this._call = call;
  }
}

export class Set_priv_user_statusCall extends ethereum.Call {
  get inputs(): Set_priv_user_statusCall__Inputs {
    return new Set_priv_user_statusCall__Inputs(this);
  }

  get outputs(): Set_priv_user_statusCall__Outputs {
    return new Set_priv_user_statusCall__Outputs(this);
  }
}

export class Set_priv_user_statusCall__Inputs {
  _call: Set_priv_user_statusCall;

  constructor(call: Set_priv_user_statusCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class Set_priv_user_statusCall__Outputs {
  _call: Set_priv_user_statusCall;

  constructor(call: Set_priv_user_statusCall) {
    this._call = call;
  }
}

export class Update_borrow_feeCall extends ethereum.Call {
  get inputs(): Update_borrow_feeCall__Inputs {
    return new Update_borrow_feeCall__Inputs(this);
  }

  get outputs(): Update_borrow_feeCall__Outputs {
    return new Update_borrow_feeCall__Outputs(this);
  }
}

export class Update_borrow_feeCall__Inputs {
  _call: Update_borrow_feeCall;

  constructor(call: Update_borrow_feeCall) {
    this._call = call;
  }

  get pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Update_borrow_feeCall__Outputs {
  _call: Update_borrow_feeCall;

  constructor(call: Update_borrow_feeCall) {
    this._call = call;
  }
}

export class Update_default_protocol_feeCall extends ethereum.Call {
  get inputs(): Update_default_protocol_feeCall__Inputs {
    return new Update_default_protocol_feeCall__Inputs(this);
  }

  get outputs(): Update_default_protocol_feeCall__Outputs {
    return new Update_default_protocol_feeCall__Outputs(this);
  }
}

export class Update_default_protocol_feeCall__Inputs {
  _call: Update_default_protocol_feeCall;

  constructor(call: Update_default_protocol_feeCall) {
    this._call = call;
  }

  get pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Update_default_protocol_feeCall__Outputs {
  _call: Update_default_protocol_feeCall;

  constructor(call: Update_default_protocol_feeCall) {
    this._call = call;
  }
}

export class Change_fee_toCall extends ethereum.Call {
  get inputs(): Change_fee_toCall__Inputs {
    return new Change_fee_toCall__Inputs(this);
  }

  get outputs(): Change_fee_toCall__Outputs {
    return new Change_fee_toCall__Outputs(this);
  }
}

export class Change_fee_toCall__Inputs {
  _call: Change_fee_toCall;

  constructor(call: Change_fee_toCall) {
    this._call = call;
  }

  get new_recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Change_fee_toCall__Outputs {
  _call: Change_fee_toCall;

  constructor(call: Change_fee_toCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }

  get pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }

  get pair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _blueprint(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fee_to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class Deploy_stable_risk_pairCall extends ethereum.Call {
  get inputs(): Deploy_stable_risk_pairCall__Inputs {
    return new Deploy_stable_risk_pairCall__Inputs(this);
  }

  get outputs(): Deploy_stable_risk_pairCall__Outputs {
    return new Deploy_stable_risk_pairCall__Outputs(this);
  }
}

export class Deploy_stable_risk_pairCall__Inputs {
  _call: Deploy_stable_risk_pairCall;

  constructor(call: Deploy_stable_risk_pairCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get oracle(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Deploy_stable_risk_pairCall__Outputs {
  _call: Deploy_stable_risk_pairCall;

  constructor(call: Deploy_stable_risk_pairCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class Deploy_low_risk_pairCall extends ethereum.Call {
  get inputs(): Deploy_low_risk_pairCall__Inputs {
    return new Deploy_low_risk_pairCall__Inputs(this);
  }

  get outputs(): Deploy_low_risk_pairCall__Outputs {
    return new Deploy_low_risk_pairCall__Outputs(this);
  }
}

export class Deploy_low_risk_pairCall__Inputs {
  _call: Deploy_low_risk_pairCall;

  constructor(call: Deploy_low_risk_pairCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get oracle(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Deploy_low_risk_pairCall__Outputs {
  _call: Deploy_low_risk_pairCall;

  constructor(call: Deploy_low_risk_pairCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class Deploy_medium_risk_pairCall extends ethereum.Call {
  get inputs(): Deploy_medium_risk_pairCall__Inputs {
    return new Deploy_medium_risk_pairCall__Inputs(this);
  }

  get outputs(): Deploy_medium_risk_pairCall__Outputs {
    return new Deploy_medium_risk_pairCall__Outputs(this);
  }
}

export class Deploy_medium_risk_pairCall__Inputs {
  _call: Deploy_medium_risk_pairCall;

  constructor(call: Deploy_medium_risk_pairCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get oracle(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Deploy_medium_risk_pairCall__Outputs {
  _call: Deploy_medium_risk_pairCall;

  constructor(call: Deploy_medium_risk_pairCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class Deploy_high_risk_pairCall extends ethereum.Call {
  get inputs(): Deploy_high_risk_pairCall__Inputs {
    return new Deploy_high_risk_pairCall__Inputs(this);
  }

  get outputs(): Deploy_high_risk_pairCall__Outputs {
    return new Deploy_high_risk_pairCall__Outputs(this);
  }
}

export class Deploy_high_risk_pairCall__Inputs {
  _call: Deploy_high_risk_pairCall;

  constructor(call: Deploy_high_risk_pairCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get oracle(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Deploy_high_risk_pairCall__Outputs {
  _call: Deploy_high_risk_pairCall;

  constructor(call: Deploy_high_risk_pairCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class Deploy_custom_risk_pairCall extends ethereum.Call {
  get inputs(): Deploy_custom_risk_pairCall__Inputs {
    return new Deploy_custom_risk_pairCall__Inputs(this);
  }

  get outputs(): Deploy_custom_risk_pairCall__Outputs {
    return new Deploy_custom_risk_pairCall__Outputs(this);
  }
}

export class Deploy_custom_risk_pairCall__Inputs {
  _call: Deploy_custom_risk_pairCall;

  constructor(call: Deploy_custom_risk_pairCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get oracle(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _blueprint(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get code_offset(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get minimum_target_utilization(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get maximum_target_utilization(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get starting_interest_per_second(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get minimum_interest_per_second(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get maximum_interest_per_second(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get elasticity(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }
}

export class Deploy_custom_risk_pairCall__Outputs {
  _call: Deploy_custom_risk_pairCall;

  constructor(call: Deploy_custom_risk_pairCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
